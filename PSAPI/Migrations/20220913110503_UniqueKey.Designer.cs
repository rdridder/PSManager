// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PSData.Context;

#nullable disable

namespace PSAPI.Migrations
{
    [DbContext(typeof(ProcessContext))]
    [Migration("20220913110503_UniqueKey")]
    partial class UniqueKey
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Model.Process", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<bool>("IsReplayable")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Id");

                    b.ToTable("Processes");
                });

            modelBuilder.Entity("Model.ProcessDefinition", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReplayable")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Id");

                    b.ToTable("ProcessDefinitions");
                });

            modelBuilder.Entity("Model.ProcessDefinitionTaskDefinition", b =>
                {
                    b.Property<long>("ProcessDefinitionId")
                        .HasColumnType("bigint");

                    b.Property<long>("ProcessTaskDefinitionId")
                        .HasColumnType("bigint");

                    b.HasKey("ProcessDefinitionId", "ProcessTaskDefinitionId");

                    b.HasIndex("ProcessTaskDefinitionId");

                    b.ToTable("ProcessDefinitionTaskDefinition");
                });

            modelBuilder.Entity("Model.ProcessTask", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<long?>("ProcessId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ProcessId");

                    b.ToTable("ProcessTask");
                });

            modelBuilder.Entity("Model.ProcessTaskDefinition", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Id");

                    b.HasIndex("Key")
                        .IsUnique();

                    b.ToTable("ProcessTaskDefinition");
                });

            modelBuilder.Entity("Model.ProcessDefinitionTaskDefinition", b =>
                {
                    b.HasOne("Model.ProcessDefinition", "ProcessDefinition")
                        .WithMany("ProcessDefinitionTaskDefinitions")
                        .HasForeignKey("ProcessDefinitionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Model.ProcessTaskDefinition", "ProcessTaskDefinition")
                        .WithMany("ProcessDefinitionTaskDefinitions")
                        .HasForeignKey("ProcessTaskDefinitionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProcessDefinition");

                    b.Navigation("ProcessTaskDefinition");
                });

            modelBuilder.Entity("Model.ProcessTask", b =>
                {
                    b.HasOne("Model.Process", null)
                        .WithMany("ProcessTasks")
                        .HasForeignKey("ProcessId");
                });

            modelBuilder.Entity("Model.Process", b =>
                {
                    b.Navigation("ProcessTasks");
                });

            modelBuilder.Entity("Model.ProcessDefinition", b =>
                {
                    b.Navigation("ProcessDefinitionTaskDefinitions");
                });

            modelBuilder.Entity("Model.ProcessTaskDefinition", b =>
                {
                    b.Navigation("ProcessDefinitionTaskDefinitions");
                });
#pragma warning restore 612, 618
        }
    }
}
